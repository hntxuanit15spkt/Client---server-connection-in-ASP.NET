@*@model IEnumerable<ContosoUniversity.Models.Student>*@
@*specifies that the view now gets a PagedList object instead of a List object.*@
@model PagedList.IPagedList<ContosoUniversity.Models.Student> 
@using PagedList.Mvc;@*gives access to the MVC helper for the paging buttons.*@
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
	ViewBag.Title = "Students";
}

<h2>Students</h2>

<p>
	@Html.ActionLink("Create New", "Create")
</p>
@*The default BeginForm submits form data with a POST, which means that parameters are passed in the HTTP message body and not in the URL as query strings. When you specify HTTP GET, the form data is passed in the URL as query strings, which enables users to bookmark the URL*@
@using (Html.BeginForm("Index", "Student", FormMethod.Get))
{
	<p>
		Find by name: @Html.TextBox("searchString", ViewBag.CurrentFilter as string) @*value trong TextBox hiển thị trong suốt quá trình paging khi đã có kết quả tìm kiếm*@
		<input type="submit" value="Search" />
	</p>
}
<table class="table">
	<tr>
		<th>
			@*@Html.DisplayNameFor(model => model.LastName)
				ViewBag định nghĩa các biến dưới dạng Dynamic: ViewBag.DanhMuc. cho phép truyền dữ liệu từ controller xuống view tương ứng và chỉ sử dụng một lần duy nhất sau khi truyền thì sẽ tự động giải phóng (null)
			*@
			@Html.ActionLink("Last Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
		</th>
		<th>
			First Name
		</th>
		<th>
			@*@Html.DisplayNameFor(model => model.FirstMidName)*@
			@Html.ActionLink("Enrollment Date", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })
		</th>
		<th>
		</th>
		<th></th>
	</tr>

	@foreach (var item in Model)
	{
		<tr>
			<td>
				@Html.DisplayFor(modelItem => item.LastName)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.FirstMidName)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.EnrollmentDate)
			</td>
			<td>
				@*URL are created by ActionLink statements in the Razor view*@
				@Html.ActionLink("Edit", "Edit", new { id = item.ID }) |@*routeValues object is added to the route data because the id parameter matches the default route in RouteConfig.cs file if it's not matches  it's added as a query string not route data*@
				@Html.ActionLink("Details", "Details", new { id = item.ID }) |
				@Html.ActionLink("Delete", "Delete", new { id = item.ID })
			</td>
		</tr>
	}

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
		new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
